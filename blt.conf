########################################
### ----- BLT Configuration File --- ###
########################################
#
# lines begining with a pound are comments and default values
# this file will be looked for at : ./blt.conf and then /etc/blt.conf
#


### --- LOGGING --- ###
#######################
# Log file and level
# blt.log.file = /var/log/blt/blt.log
#
# launching BLT in single run mode,
# from command line with "java -jar blt.jar" could be very convenient
# for troubleshooting purposes
# for this to work you must uncomment the following line to avoid logs
# going to default destination folder
blt.log.file = CONSOLE
#
###############
# Log file count
# blt.log.count = 5
blt.log.count = 10
#
###############
# Log severity level
# valid levels are: OFF, FATAL, ERROR, WARN, INFO, DEBUG, ALL
# blt.log.level = WARN
#
###############
# Log size max in MB
# blt.log.maxsize = 2
#
# if you want to monitor prefix add/withdraw activity
# and follow each and every change in a dedicated file
# you need to uncomment the following line
# blt.log.prefixActivityFile = blt-prefixActivity.log
#
# if you want to monitor users activity
# and follow this in a dedicated file
# you need to uncomment the following line
# blt.log.auditfile = blt-auditfile.log


### --- DATA STORAGE --- ###
############################
# This XML file will store all data related to your topology
# including your custom router positions
# be sure the blt user has a read/write access to it
# blt.dump.filename = blt-data.xml


### --- IGP ROUTING --- ###
############################
# in some circumstances, for instance ISIS L1/L2 or OSPF redistribution,
# same prefix can be originated by multiple routers
# In order to avoid duplicate snmp target,
# we do not consider prefixes with metric higher 
# than "localIgpMaxMetric" to be directly connected.
# blt.router.localIgpMaxMetric = 10
#
###############
# Threshold in seconds to declare that a prefix is no longer considered as new:
# blt.bgp.deltaNewIgpRoute = 180
blt.bgp.deltaNewIgpRoute = 120
#
###############
# Threshold in seconds to declare that a prefix must be removed from controller after withdrawn:
# blt.bgp.deltaLostIgpRoute = 360
blt.bgp.deltaLostIgpRoute = 120


### --- HTTP EMBEDDED SERVER --- ###
####################################
# a common mistake is to forget certificate generation
# be sure to read the INSTALL file
# 
# if you need to change the default URL https://localhost:8443
# you can tune values here below
#
###############
# blt.http.baseurl = https://localhost
# blt.http.baseport = 8443
# blt.http.apipath = /api


### --- SNMP POLLING --- ###
############################
# SNMP is used only at startup or when a new node
# appears in the topology.
# Data collected: node and interfaces names and addresses.
# Once this is done the controller is only updated by BGP LS
#
# Timeout for SNMP GET requests
# blt.snmp.timeout = 2000
#
# Number of retries for SNMP GET requests
# blt.snmp.retries = 10
#
# Throttle timer in msec when we don't get any response
# from target
# blt.snmp.taskthrottletime = 20000
#
# When a node has a large number of interfaces, 
# it may be a good idea to skip them when SNMP polling occurs
# in order to avoid flooding and negative impact on other 
# tasks run by BLT.
# To do this, set the following option to "true"
# blt.snmp.skipinterfaces = false


### --- GPS COORDINATES --- ###
#####################################
# When below option is set to "true", 
# BLT will look for GPS coordinates of each node.  
# Of course, each and every node in the network 
# must have a proper GPS location (lat/long).  
#
# blt.coordinates.lookup = false
blt.coordinates.lookup = true
#
# Further options regarding coordinates retrieval:
#
# The below options are considered only when  
# blt.coordinates.lookup is true
#
# BLT supports two modes : 
# - snmp : SNMP location (default mode) or
# - dns : DNS LOC records (RFC1876) 
#
# For SNMP, we accept various formats, 
# conforming to the following regexp: 
# ((-|)\d+\.\d+)[^\d-]+((-|)\d+\.\d+)
# where first and third parenthesis 
# contain lat/long coordinates, 
# in DD (decimal degrees) notation. 
#
# For DNS, you have to conform to LOC entry DMS format, 
# see here: https://en.wikipedia.org/wiki/LOC_record
# 
# blt.coordinates.collect = snmp
#
# DNS options : 
# If blt.coordinates.collect is set to "dns", 
# you have more options. 
# You can rely on the local system resolver (default) 
# or specify your own like this:
# 
# blt.coordinates.resolver = 192.168.0.1
#
# Finally you can set the routers domain name like this: 
#
# blt.coordinates.domainname = mydomain.org
# 
# This is convenient when your system must query 
# the resolver with FQDN in order to get LOC records back
#
# If GPS coordinates cannot be fetched properly: 
# - lat/long properties will not exist in nodes objects, 
# - Google maps view will not be available in the UI 